{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"eb682fce-436b-5a1a-a044-bb1b8bd18254","excerpt":"React와 Vue 방식 및 업데이트 전략 React React는 가상 DOM을 사용하면서도 상태의 변화를 감지하고 최소한의 변경만을 실제 DOM에 반영하는데 중점을 두고 있습니다. 이를 통해 React는 업데이트의 효율성을 높이고 성능을 최적화합니다. Vue Vue도 가상 DOM을 사용하지만, Vue는 템플릿과 상태를 사용하여 컴포넌트를 선언적으로 작성하는데 중점을 둡니다. Vue는 상태 변화를 감지하고 그에 따라 자동으로 가상 DOM을 업데이트하는데, 이 과정에서 개발자가 추가적인 최적화를 수행하지 않아도 비교적 효율적으로 업데이트를 처리합니다. API와 문법 React React는 JSX(JavaScript XML) 문법을 사용하며, 컴포넌트 간 통신 및 상태 관리를 위해 React Hooks와 클래스 컴포넌트를 지원합니다. Vue Vue는 템플릿 문법을 사용하여 컴포넌트를 정의하며, 디렉티브를 사용하여 템플릿 내에서 로직을 처리합니다. Vue 3에서는 Composition …","frontmatter":{"categories":"알아보기","title":"React와 Vue 알아보기","date":"December 10, 2023"},"fields":{"slug":"/React-Vue/"}}},{"node":{"id":"4f30367f-1698-52e0-84d3-c8f3204862e5","excerpt":"URI(Uniform Resource Identifier) 자원의 위치뿐만 아니라 자원에 대한 고유 식별자로서 URL의 의미를 포함합니다. URI의 존재는 인터넷에서 요구되는 기본 조건으로써 인터넷 프로토콜에 항상 붙어다니며, URI의 하위 개념으로 URL과 URN이 있습니다. URL(Uniform Resource Locator) URL은 우리가 가장 흔히 보는 것으로 URL은 Resource의 정확한 위치 정보(파일의 위치)를 나타냅니다. URL을 통해 Resource가 어디에 있는지 어떻게 접근할 수 있는 지 알 수 있습니다. URI와 URL의 구분 URI는 통합 자원 식별자로 주소에 식별자가 있으면 URI입니다. URL은 리소스 주소를 나타내므로 리소스 위치까지만 나타내면 URL 입니다.","frontmatter":{"categories":"알아보기","title":"URI와 URL 알아보기","date":"November 23, 2023"},"fields":{"slug":"/URI-URL/"}}},{"node":{"id":"95cabfb0-05bc-51aa-b5a7-6e35bdbc81a2","excerpt":"HTTP 의 문제점 HTTP 는 평문 통신이기 때문에 도청이 가능하다. 통신 상대를 확인하지 않기 때문에 위장이 가능하다. 완전성을 증명할 수 없기 때문에 변조가 가능하다. 위 세 가지는 다른 암호화하지 않은 프로토콜에도 공통되는 문제점들이다. TCP/IP 는 도청 가능한 네트워크이다. TCP/IP 구조의 통신은 전부 통신 경로 상에서 엿볼 수 있다. 패킷을 수집하는 것만으로 도청할 수 있다. 평문으로 통신을 할 경우 메시지의 의미를 파악할 수 있기 때문에 암호화하여 통신해야 한다. 보완 방법 통신 자체를 암호화  or 라는 다른 프로토콜을 조합함으로써 HTTP 의 통신 내용을 암호화할 수 있다. SSL 을 조합한 HTTP 를  or 이라고 부른다. 콘텐츠를 암호화 말 그대로 HTTP 를 사용해서 운반하는 내용인, HTTP 메시지에 포함되는 콘텐츠만 암호화하는 것이다. 암호화해서 전송하면 받은 측에서는 그 암호를 해독하여 출력하는 처리가 필요하다. 통신 상대를 확인하지 않기 때문에…","frontmatter":{"categories":"알아보기","title":"HTTP와 HTTPS 알아보기","date":"November 22, 2023"},"fields":{"slug":"/HTTP-HTTPS/"}}},{"node":{"id":"d62809dd-cab0-5de5-aa0f-0c2ac848c91e","excerpt":"REST(Representational State Transfer)의 약자로 자원을 이름으로 구분하여 해당 자원의 상태를 주고받는 모든 것을 말합니다. REST HTTP URI(Uniform Resource Identifier)를 통해 자원(Resource)을 명시하고, HTTP Method(POST, GET, PUT, DELETE, PATCH 등)를 통해 해당 자원(URI)에 대한 CRUD Operation을 적용하는 것을 의미합니다. 💡CRUD Operation CRUD는 대부분의 컴퓨터 소프트웨어가 가지는 기본적인 데이터 처리 기능인 Create(생성), Read(읽기), Update(갱신), Delete(삭제)를 묶어서 일컫는 말로 REST에서의 CRUD Operation 동작 예시는 다음과 같습니다. Create : 데이터 생성(POST) Read : 데이터 조회(GET) Update : 데이터 수정(PUT, PATCH) Delete : 데이터 삭제(DELETE) 구성 요…","frontmatter":{"categories":"알아보기","title":"RESTful API 알아보기","date":"November 21, 2023"},"fields":{"slug":"/RESTful-API/"}}},{"node":{"id":"e4edf89a-53a7-5060-8365-84ffc2dcf5ba","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","frontmatter":{"categories":"블로그 featured","title":"Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"},"fields":{"slug":"/gatsby-github-blog/"}}},{"node":{"id":"18fe268a-c948-5b89-b759-dde747c39b24","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","frontmatter":{"categories":"블로그 featured","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"},"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"오영재","bio":{"role":"개발자","description":["아는 것을 설명할 수 있는","꾸준히 성장하는","새로운 것을 만드는"],"thumbnail":"sample.png"},"social":{"github":"https://github.com/kingturtle0","linkedIn":"","email":"dhdnqkrtk22@naver.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}